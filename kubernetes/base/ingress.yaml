apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: natricon-ingress
  namespace: natricon
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
        real_ip_header CF-Connecting-IP;
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/websocket-services: "go-natricon-service"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/upstream-hash-by: $remote_addr
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "natricon_socket"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/server-snippet: |-
      location /api/nanocallback {
          deny all;
          return 404;
      }
spec:
  tls:
  - hosts:
    - natricon.com
    secretName: natricon-com-server-secret
  rules:
  - host: natricon.com
    http:
      paths:
      - path: /
        backend:
          serviceName: nuxt-natricon-service
          servicePort: 3000
      - path: /api
        backend:
          serviceName: go-natricon-service
          servicePort: 5555
  - host: www.natricon.com
    http:
      paths:
      - path: /
        backend:
          serviceName: nuxt-natricon-service
          servicePort: 3000
      - path: /api
        backend:
          serviceName: go-natricon-service
          servicePort: 5555
